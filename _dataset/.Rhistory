setwd("/Users/gd/OneDrive - rff/Documents/Research/projects/climate_policy_diffusion/data/dataset")
library(devtools)
library(plm)
library(dplyr)
library(stargazer)
library(xtable)
library(survival)
library(eha)
library(rms)
df_allobs <- read.csv("CPdiff_dataset_v2.csv")
df_allobs_cov <- subset(df_allobs, select = -c(Country, Year,
tax_imp, ets_imp, fit_imp, rps_imp, pricing_imp, techpol_imp,
tax_exp,ets_exp, fit_exp, rps_exp, pricing_exp, techpol_exp,
tax_eu, ets_eu, fit_eu, rps_eu, pricing_eu, techpol_eu,
patents_ds_exp, capacity_ws_ds_exp, patents_ds_eu, capacity_ws_ds_eu,
#clim_pol_avg,
capacity_ds_global, patents_ds_global,
patents_ds, Duration, exports, co2_tot, co2_pc,
pop_tot, v2x_libdem, co2_int, innovator,
gdp_pc_ppp_sc, pop_tot_sc, ff_perc_tot_sc, co2_int_sc, v2x_polyarchy_sc))
df_allobs_cov <- select(df_allobs_cov, !ends_with(c("_fta_wto", "_contig", "_ODA", "_col45")))
dataframes <- list(fit = "CPdiff_hz_fit_v2.csv", rps = "CPdiff_hz_rps_v2.csv", techno = "CPdiff_hz_techpol_v2.csv",
ets = "CPdiff_hz_ets_v2.csv", tax = "CPdiff_hz_tax_v2.csv", pricing = "CPdiff_hz_pricing_v2.csv")
weibull <- list()
exponential <- list()
cox <- list()
for (name in names(dataframes)) {
print(name)
df = read.csv(dataframes[[name]])
df$start = df$Duration - 1
df$stop = df$Duration
outcome <- names(select(df, "policy_"))
if (name %in% list("fit", "rps", "techno")) {
#WEIBULL
#Accessing with [[ or $ is similar. However, it differs for [ in that, indexing with [ will return us a data frame but the other two will reduce it into a vector.
surv_wei <- Surv(df$Duration, df[[outcome[1]]])
weibull[[name]] <- phreg(surv_wei ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
dist='weibull')
#The coefficient estimated by the survreg command are AFT coefficients - they need to be transformed into
#PH model coefficients. https://www.rdocumentation.org/packages/SurvRegCensCov/versions/1.4/topics/ConvertWeibull
#weibullph[[i]] <- ConvertWeibull(weibull[[i]], conf.level = 0.95)
#EXPONENTIAL
exponential[[name]] <- phreg(surv_wei ~ policy_share + policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
dist='weibull',
shape = 1)
#COX
surv_cox <- Surv(df$start, df$stop, df[[outcome[1]]])
cox[[name]] <- coxph(surv_cox ~ policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
ties = "breslow",
data = df,
cluster = Country)
}
else if (name %in% list("tax", "ets", "pricing")) {
#WEIBULL
#Accessing with [[ or $ is similar. However, it differs for [ in that, indexing with [ will return us a data frame but the other two will reduce it into a vector.
surv_wei <- Surv(df$Duration, df[[outcome[1]]])
weibull[[name]] <- phreg(surv_wei ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
dist='weibull')
#The coefficient estimated by the survreg command are AFT coefficients - they need to be transformed into
#PH model coefficients. https://www.rdocumentation.org/packages/SurvRegCensCov/versions/1.4/topics/ConvertWeibull
#weibullph[[i]] <- ConvertWeibull(weibull[[i]], conf.level = 0.95)
#EXPONENTIAL
exponential[[name]] <- phreg(surv_wei ~ policy_share + policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
dist='weibull',
shape = 1)
#COX
surv_cox <- Surv(df$start, df$stop, df[[outcome[1]]])
cox[[name]] <- coxph(surv_cox ~ policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
ties = "breslow",
data = df,
cluster = Country)
}
}
stargazer(cox["fit"], cox["rps"], cox["ets"], cox["tax"], weibull["fit"], weibull["rps"], weibull["ets"], weibull["tax"],
exponential["fit"], exponential["rps"], exponential["ets"], exponential["tax"],
type = "latex", out = "/Users/gd/OneDrive - rff/Documents/Research/projects/climate_policy_diffusion/manuscript/Tex_file/tables/results_v2.tex",
style = "aer", intercept.bottom = TRUE, font.size = "tiny", label = "resultsmain",
#single.row = TRUE,
no.space = TRUE,
column.sep.width = "1pt",
covariate.labels = c("Free riding", "Leakage",
"Cultural sim. - colon.", "Cultural sim. - com. lang", "Cultural sim - religion",
"Communication - official", "Communication - private",
"Local knowledge stock (KS)",  "Local KS x import share",
"$\\%$ elec. from fossil fuel", "GDP per capita", "Electoral dem. index", "Constant"),
model.numbers          = FALSE,
model.names            = TRUE,
dep.var.labels.include = TRUE,
dep.var.labels   = c("Cox", "Weibull", "Exponential"),
column.labels = c("FiT", "RPS", "ETS", "Tax", "FiT", "RPS","ETS", "Tax", "FiT", "RPS","ETS", "Tax"),
title = "Estimation results") #, float.env = "sidewaystable"
stargazer(cox["techno"], cox["pricing"], weibull["techno"], weibull["pricing"], exponential["techno"], exponential["pricing"],
type = "latex", out = "/Users/gd/OneDrive - rff/Documents/Research/projects/climate_policy_diffusion/manuscript/Tex_file/tables/results_aggpol_v2.tex",
style = "aer", intercept.bottom = TRUE, font.size = "tiny", label = "resultsmain",
#single.row = TRUE,
no.space = TRUE,
column.sep.width = "1pt",
covariate.labels = c("Free riding", "Leakage",
"Cultural sim. - colon.", "Cultural sim. - com. lang", "Cultural sim - religion",
"Communication - official", "Communication - private",
"Local knowledge stock (KS)",  "Local KS x import share",
"$\\%$ elec. from fossil fuel", "GDP per capita", "Electoral dem. index", "Constant"),
model.numbers          = FALSE,
model.names            = TRUE,
dep.var.labels.include = TRUE,
dep.var.labels   = c("Cox", "Weibull", "Exponential"),
column.labels = c("All energy policies", "All pricing mechanisms", "All energy policies", "All pricing mechanisms", "All energy policies", "All pricing mechanisms"),
title = "Estimation results") #, float.env = "sidewaystable"
cox_rc <- list()
for (name in names(dataframes)) {
print(name)
df = read.csv(dataframes[[name]])
df$start = df$Duration - 1
df$stop = df$Duration
outcome <- names(select(df, "policy_"))
surv_wei <- Surv(df$Duration, df[[outcome[1]]])
surv_cox <- Surv(df$start, df$stop, df[[outcome[1]]])
if (name %in% c("fit", "rps", "techno")) {
#EU
try(cox_rc[[paste(name,"_eu", sep="")]] <- coxph(surv_cox ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + patents_ds_eu + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
ties = 'breslow',
cluster = Country))
#Disembodied knowledge
try(cox_rc[[paste(name,"_dk", sep="")]] <- coxph(surv_cox ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + patents_ds_exp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
ties = 'breslow',
cluster = Country))
#Global knowledge stock
try(cox_rc[[paste(name,"_gk", sep="")]] <- coxph(surv_cox ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + patents_ds_global + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
ties = 'breslow',
cluster = Country))
#Technology supply
try(cox_rc[[paste(name,"_ts", sep="")]] <- coxph(surv_cox ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + capacity_ds_global + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
ties = 'breslow',
cluster = Country))
#ODA - only test for FiTs and RPS because few - if any - countries receiving ODA have implemented carbon tax or ETS
#try(cox_rc[[i+4]] <- coxph(surv_cox ~  policy_imp + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + policy_ODA + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
#                         data = df,
#                         ties = 'breslow',
#                         cluster = Country))
#Colonial relationship post 1945
try(cox_rc[[paste(name,"_col45", sep="")]] <- coxph(surv_cox ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + policy_col45 + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
ties = 'breslow',
cluster = Country))
#Domestic knowledge stock
try(cox_rc[[paste(name,"_doms", sep="")]] <- coxph(surv_cox ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + patents_ds + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
ties = 'breslow',
cluster = Country))
}
if (name %in% c("tax", "ets", "pricing")) {
#EU
try(cox_rc[[paste(name,"_eu", sep="")]] <- coxph(surv_cox ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + patents_ds_eu + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
ties = 'breslow',
cluster = Country))
#Disembodied knowledge
try(cox_rc[[paste(name,"_dk", sep="")]] <- coxph(surv_cox ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + patents_ds_exp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
ties = 'breslow',
cluster = Country))
#Global knowledge stock
try(cox_rc[[paste(name,"_gk", sep="")]] <- coxph(surv_cox ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + patents_ds_global + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
ties = 'breslow',
cluster = Country))
#Technology supply
try(cox_rc[[paste(name,"_ts", sep="")]] <- coxph(surv_cox ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + capacity_ds_global + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
ties = 'breslow',
cluster = Country))
#Colonial relationship post 1945
#    try(cox_rc[[paste(name,"_col45")]] <- coxph(surv_cox ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + policy_col45 + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
#                                                data = df,
#                                                ties = 'breslow',
#                                                cluster = Country))
#Domestic knowledge stock
try(cox_rc[[paste(name,"_doms", sep="")]] <- coxph(surv_cox ~  policy_leakage_index + policy_comcol + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + patents_ds + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
ties = 'breslow',
cluster = Country))
}
}
# Output table - latex
stargazer(cox_rc["fit_eu"], cox_rc["fit_dk"], cox_rc["fit_gk"], cox_rc["fit_ts"], cox_rc["fit_col45"], cox_rc["fit_doms"],
cox_rc["rps_eu"], cox_rc["rps_dk"], cox_rc["rps_gk"], cox_rc["rps_ts"], cox_rc["rps_col45"], cox_rc["rps_doms"],
type = "latex", out = "/Users/gd/OneDrive - rff/Documents/Research/projects/climate_policy_diffusion/manuscript/Tex_file/tables/results_rcI_v2.tex",
style = "aer", intercept.bottom = TRUE, font.size = "tiny", label = "resultsrcI",
#single.row = TRUE,
no.space = TRUE,
column.sep.width = "1pt",
covariate.labels = c("Leakage",
"Cultural sim. - colon.", "Cultural sim. - language", "Cultural sim. - relig.",
"Communication - official", "Communication - private",
"Local knowledge stock (KS)", "Local KS x import share",
"Knowledge stock EU", "Disembodied knowledge",
"Global foreign KS", "Global renewables cap.", "Peer pressure - colonizer", "Domestic KS",
"$\\%$ elec. from fossil fuel", "GDP per capita", "Electoral dem. index", "Constant"),
model.numbers          = FALSE,
model.names            = TRUE,
dep.var.labels.include = FALSE,
column.labels = c("SM", "DK", "Glob.", "Tech. Dep.", "Colonizer", "Dom.", "SM", "DK", "Glob.", "Tech. Dep.", "Colonizer", "Dom."),
title = "Robustness checks - FiT $\\&$ RPS") #, float.env = "sidewaystable"
stargazer(cox_rc["ets_eu"], cox_rc["ets_dk"], cox_rc["ets_gk"], cox_rc["ets_ts"], cox_rc["ets_doms"],
cox_rc["tax_eu"], cox_rc["tax_dk"], cox_rc["tax_gk"], cox_rc["tax_ts"], cox_rc["tax_doms"],
type = "latex", out = "/Users/gd/OneDrive - rff/Documents/Research/projects/climate_policy_diffusion/manuscript/Tex_file/tables/results_rcII_v2.tex",
style = "aer", intercept.bottom = TRUE, font.size = "tiny", label = "resultsrcII",
#single.row = TRUE,
no.space = TRUE,
column.sep.width = "1pt",
covariate.labels = c("Leakage",
"Cultural sim. - colon.", "Cultural sim. - language", "Cultural sim. - relig.",
"Communication - official", "Communication - private",
"Local knowledge stock (KS)", "Local KS x import share", "Patent stock EU", "Disembodied KS",
"Global foreign KS", "Global renewables cap.", "Domestic KS", #"Peer pressure - colonizer",
"$\\%$ elec. from fossil fuel", "GDP per capita", "Electoral dem. index", "Constant"),
model.numbers          = FALSE,
model.names            = TRUE,
dep.var.labels.include = FALSE,
column.labels = c("SM", "DK", "Glob.", "Tech. Dep.", "Dom.", "SM", "DK", "Glob.", "Tech. Dep.", "Dom."),
title = "Robustness checks - ETS $\\&$ Tax") #, float.env = "sidewaystable"
stargazer(cox_rc["techno_eu"], cox_rc["techno_dk"], cox_rc["techno_gk"], cox_rc["techno_ts"], cox_rc["techno_doms"],
cox_rc["pricing_eu"], cox_rc["pricing_dk"], cox_rc["pricing_gk"], cox_rc["pricing_ts"], cox_rc["pricing_doms"],
type = "latex", out = "/Users/gd/OneDrive - rff/Documents/Research/projects/climate_policy_diffusion/manuscript/Tex_file/tables/results_rcIII_v2.tex",
style = "aer", intercept.bottom = TRUE, font.size = "tiny", label = "resultsrcII",
#single.row = TRUE,
no.space = TRUE,
column.sep.width = "1pt",
covariate.labels = c("Leakage",
"Cultural sim. - colon.", "Cultural sim. - language", "Cultural sim. - relig.",
"Communication - official", "Communication - private",
"Local knowledge stock (KS)", "Local KS x import share", "Patent stock EU", "Disembodied KS",
"Global foreign KS", "Global renewables cap.", "Domestic KS", #"Peer pressure - colonizer",
"$\\%$ elec. from fossil fuel", "GDP per capita", "Electoral dem. index", "Constant"),
model.numbers          = FALSE,
model.names            = TRUE,
dep.var.labels.include = FALSE,
column.labels = c("SM", "DK", "Glob.", "Tech. Dep.", "Dom.", "SM", "DK", "Glob.", "Tech. Dep.", "Dom."),
title = "Robustness checks - All energy policies $\\&$ All pricing policies") #, float.env = "sidewaystable"
cox_noninn <- list()
i = 1
for (name in names(dataframes)) {
print(name)
df = read.csv(dataframes[[name]])
df <- subset(df, innovator == 0)
df$start = df$Duration - 1
df$stop = df$Duration
outcome <- names(select(df, ends_with("dummy")))
#Cox
surv_wei <- Surv(df$Duration, df[[outcome[1]]])
# Implementing different model specications for different policies
if (name %in% list("fit", "rps", "ets", "tax")) {
cox_noninn[[paste(name,"_noninn", sep="")]] <- coxph(surv_wei ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
tie = 'breslow',
cluster = Country)#,
}
}
cox_noninn <- list()
i = 1
for (name in names(dataframes)) {
print(name)
df = read.csv(dataframes[[name]])
df <- subset(df, innovator == 0)
df$start = df$Duration - 1
df$stop = df$Duration
outcome <- names(select(df, "policy_"))
#Cox
surv_wei <- Surv(df$Duration, df[[outcome[1]]])
# Implementing different model specications for different policies
if (name %in% list("fit", "rps", "ets", "tax")) {
cox_noninn[[paste(name,"_noninn", sep="")]] <- coxph(surv_wei ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
tie = 'breslow',
cluster = Country)#,
}
}
for (name in list("fit", "rps", "ets", "tax")) {
print(name)
df = read.csv(dataframes[[name]])
df <- subset(df, innovator == 0)
df$start = df$Duration - 1
df$stop = df$Duration
outcome <- names(select(df, "policy_"))
#Cox
surv_wei <- Surv(df$Duration, df[[outcome[1]]])
# Implementing different model specications for different policies
if (name %in% list("fit", "rps", "ets", "tax")) {
cox_noninn[[paste(name,"_noninn", sep="")]] <- coxph(surv_wei ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
tie = 'breslow',
cluster = Country)#,
}
}
cox_noninn <- list()
for (name in list("fit", "rps", "ets", "tax")) {
print(name)
df = read.csv(dataframes[[name]])
df <- subset(df, innovator == 0)
df$start = df$Duration - 1
df$stop = df$Duration
outcome <- names(select(df, "policy_"))
#Cox
surv_wei <- Surv(df$Duration, df[[outcome[1]]])
# Implementing different model specications for different policies
if (name %in% list("fit", "rps", "ets")) {
cox_noninn[[paste(name,"_noninn", sep="")]] <- coxph(surv_wei ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
tie = 'breslow',
cluster = Country)#,
}
else {
cox_noninn[[paste(name,"_noninn", sep="")]] <- coxph(surv_wei ~  policy_leakage_index + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
tie = 'breslow',
cluster = Country)#,
}
}
stargazer(cox_noninn["fit_noninn"], cox_noninn["rps_noninn"], cox_noninn["ets_noninn"], cox_noninn["tax_noninn"],
type = "latex", out = "/Users/gd/OneDrive - rff/Documents/Research/projects/climate_policy_diffusion/manuscript/Tex_file/tables/results_noninn.tex",
style = "aer", intercept.bottom = TRUE, font.size = "tiny", label = "resultsnoninn",
#single.row = TRUE,
no.space = TRUE,
column.sep.width = "1pt",
covariate.labels = c("Leakage", "Local knowledge stock (KS)",  "Local KS x import share",
"Cultural sim. - colon.", "Cultural sim. - com. lang", "Cultural sim - religion",
"Communication - official", "Communication - private",
"$\\%$ elec. from fossil fuel", "GDP per capita", "Electoral dem. index", "Constant"),
#dep.var.labels.include = FALSE,
model.numbers          = FALSE,
model.names            = TRUE,
dep.var.labels.include = FALSE,
#dep.var.labels   = c("Cox", "Exponential", "Weibull"),
column.labels = c("FiT", "RPS", "ETS", "Tax", "FiT", "RPS","ETS", "Tax", "FiT", "RPS","ETS", "Tax"),
title = "Estimation results - non innovating countries") #, float.env = "sidewaystable"
stargazer(cox["techno"], cox["pricing"], weibull["techno"], weibull["pricing"], exponential["techno"], exponential["pricing"],
type = "latex", out = "/Users/gd/OneDrive - rff/Documents/Research/projects/climate_policy_diffusion/manuscript/Tex_file/tables/results_aggpol_v2.tex",
style = "aer", intercept.bottom = TRUE, font.size = "tiny", label = "resultsmain",
#single.row = TRUE,
no.space = TRUE,
column.sep.width = "1pt",
covariate.labels = c("Free riding", "Leakage",
"Cultural sim. - colon.", "Cultural sim. - com. lang", "Cultural sim - religion",
"Communication - official", "Communication - private",
"Local knowledge stock (KS)",  "Local KS x import share",
"$\\%$ elec. from fossil fuel", "GDP per capita", "Electoral dem. index", "Constant"),
model.numbers          = FALSE,
model.names            = TRUE,
dep.var.labels.include = TRUE,
dep.var.labels   = c("Cox", "Weibull", "Exponential"),
column.labels = c("FiT or RPS", "Any pricing", "FiT or RPS", "Any pricing", "FiT or RPS", "Any pricing"),
title = "Estimation results") #, float.env = "sidewaystable"
stargazer(cox["techno"], cox["pricing"], weibull["techno"], weibull["pricing"], exponential["techno"], exponential["pricing"],
type = "latex", out = "/Users/gd/OneDrive - rff/Documents/Research/projects/climate_policy_diffusion/manuscript/Tex_file/tables/results_aggpol_v2.tex",
style = "aer", intercept.bottom = TRUE, font.size = "tiny", label = "resultsmain",
#single.row = TRUE,
no.space = TRUE,
column.sep.width = "1pt",
covariate.labels = c("Free riding", "Leakage",
"Cultural sim. - colon.", "Cultural sim. - com. lang", "Cultural sim - religion",
"Communication - official", "Communication - private",
"Local knowledge stock (KS)",  "Local KS x import share",
"$\\%$ elec. from fossil fuel", "GDP per capita", "Electoral dem. index", "Constant"),
model.numbers          = FALSE,
model.names            = TRUE,
dep.var.labels.include = TRUE,
dep.var.labels   = c("Cox", "Weibull", "Exponential"),
column.labels = c("FiT or RPS", "Any pricing", "FiT or RPS", "Any pricing", "FiT or RPS", "Any pricing"),
title = "Policy aggregates") #, float.env = "sidewaystable"
stargazer(cox_noninn["fit_noninn"], cox_noninn["rps_noninn"], cox_noninn["ets_noninn"], cox_noninn["tax_noninn"],
type = "latex", out = "/Users/gd/OneDrive - rff/Documents/Research/projects/climate_policy_diffusion/manuscript/Tex_file/tables/results_noninn.tex",
style = "aer", intercept.bottom = TRUE, font.size = "tiny", label = "resultsnoninn",
#single.row = TRUE,
no.space = TRUE,
column.sep.width = "1pt",
covariate.labels = c("Leakage", "Local knowledge stock (KS)",  "Local KS x import share",
"Cultural sim. - colon.", "Cultural sim. - com. lang", "Cultural sim - religion",
"Communication - official", "Communication - private",
"$\\%$ elec. from fossil fuel", "GDP per capita", "Electoral dem. index", "Constant"),
#dep.var.labels.include = FALSE,
model.numbers          = FALSE,
model.names            = TRUE,
dep.var.labels.include = FALSE,
#dep.var.labels   = c("Cox", "Exponential", "Weibull"),
column.labels = c("FiT", "RPS", "ETS", "Tax", "FiT", "RPS","ETS", "Tax", "FiT", "RPS","ETS", "Tax"),
title = "Non-innovating countries") #, float.env = "sidewaystable"
