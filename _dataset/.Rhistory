install.packages("concord_hs_naics")
install.packages("ggplot")
install.packages("plm")
install.packages("concord_hs_naics")
install.packages("concord")
install.packages("concordance")
install.packages(concord_hs_isic)
install.packages("concord_hs_isic")
install.packages("languageserver")
setwd("/Users/gd/OneDrive - rff/Documents/Research/projects/climate_policy_diffusion/data/dataset")
setwd("/Users/gd/GitHub/ClimatePolicyDiffusion/_dataset")
library(devtools)
library(plm)
library(dplyr)
library(stargazer)
library(xtable)
library(survival)
library(eha)
library(rms)
df_allobs <- read.csv("CPdiff_dataset_v4.csv")
df_allobs_cov <- subset(df_allobs, select = -c(Country, Year,
tax_imp, ets_imp, fit_imp, rps_imp, pricing_imp, techpol_imp,
tax_exp,ets_exp, fit_exp, rps_exp, pricing_exp, techpol_exp,
tax_eu, ets_eu, fit_eu, rps_eu, pricing_eu, techpol_eu,
patents_ds_exp, capacity_ws_ds_exp, patents_ds_eu, capacity_ws_ds_eu,
#clim_pol_avg,
capacity_ds_global, patents_ds_global,
patents_ds, Duration, exports, co2_tot, co2_pc,
pop_tot, v2x_libdem, co2_int, innovator,
co2_int_gdp, co2intExpShare,
gdp_pc_ppp_sc, pop_tot_sc, ff_perc_tot_sc, co2_int_sc, v2x_polyarchy_sc))
df_allobs_cov <- subset(df_allobs, select = -c(Country, year,
tax_imp, ets_imp, fit_imp, rps_imp, pricing_imp, techpol_imp,
tax_exp,ets_exp, fit_exp, rps_exp, pricing_exp, techpol_exp,
tax_eu, ets_eu, fit_eu, rps_eu, pricing_eu, techpol_eu,
patents_ds_exp, capacity_ws_ds_exp, patents_ds_eu, capacity_ws_ds_eu,
#clim_pol_avg,
capacity_ds_global, patents_ds_global,
patents_ds, Duration, exports, co2_tot, co2_pc,
pop_tot, v2x_libdem, co2_int, innovator,
co2_int_gdp, co2intExpShare,
gdp_pc_ppp_sc, pop_tot_sc, ff_perc_tot_sc, co2_int_sc, v2x_polyarchy_sc))
df_allobs_cov <- select(df_allobs_cov, !ends_with(c("_fta_wto", "_contig", "_ODA", "_col45")))
stargazer(df_allobs_cov,
type = "latex",
covariate.labels = c("Tax", "ETS", "FiT", "RPS", "All pricing policies", "All techno. policies",
"Communication - private - Tax", "Communication - private - ETS", "Communication - private - FiT", "Communication - private - RPS", "Communication - private - All pricing", "Communication - private - All techno.",
"Cultural sim. - language - Tax", "Cultural sim. - religion - Tax", "Cultural sim. - colon. - Tax", "Communication - PTA - Tax",
"Cultural sim. - language - ETS", "Cultural sim. - religion - ETS", "Cultural sim. - colon. - ETS", "Communication - PTA - ETS",
"Cultural sim. - language - FiT", "Cultural sim. - religion - FiT", "Cultural sim. - colon. - FiT", "Communication - PTA - FiT",
"Cultural sim. - language - RPS", "Cultural sim. - religion - RPS", "Cultural sim. - colon. - RPS", "Communication - PTA - RPS",
"Cultural sim. - language - All pricing", "Cultural sim. - religion - All pricing", "Cultural sim. - colon. - All pricing", "Communication - PTA - All pricing",
"Cultural sim. - language - All techno.", "Cultural sim. - religion - All techno.", "Cultural sim. - colon. - All techno.", "Communication - PTA - All techno.",
"Knowledge stock - local (imports)", "Technology stock - local (imports)",
"Knowledge stock x imports", "Technology stock x imports",
"Leakage - Tax", "Leakage - ETS", "Leakage - FiT", "Leakage - RPS", "Leakage - All pricing", "Leakage - All techno.",
"Free riding - Tax", "Free riding - ETS", "Free riding - FiT", "Free riding - RPS", "Free riding - All pricing", "Free riding - All techno.",
"$\\%$ elec. from fossil fuels$\ ^*$", "$\\%$ elec. ff. x CO2 intensity$\ ^*$",
"Import shares", "GDP per capita (PPP, 2017 constant USD)$\ ^*$", "Electoral democracy index$\ ^*$",
"CO2 intensity of GDP", "Share of world carbon-intensive exports"),
style = "aer",
font.size = "footnotesize",
summary.stat = c("n", "min", "median", "max", "sd"),
title = "Summary statistics",
notes.align = "l",
notes.append = FALSE,
notes = "\\parbox[t]{\\textwidth}{Variables marked with $\ ^*$ are scaled in the regressions so that a one-unit change represents a 10$\\%$ deviation from the mean. This aids with interpretation and follows Lovely and Popp (2011)}",
out = "/Users/gd/OneDrive - rff/Documents/Research/projects/climate_policy_diffusion/manuscript/Tex_file/Tables/sumstatR_v4.tex")
stargazer(df_allobs_cov,
type = "latex",
covariate.labels = c("Tax", "ETS", "FiT", "RPS", "All pricing policies", "All techno. policies",
"Communication - private - Tax", "Communication - private - ETS", "Communication - private - FiT", "Communication - private - RPS", "Communication - private - All pricing", "Communication - private - All techno.",
"Cultural sim. - language - Tax", "Cultural sim. - religion - Tax", "Cultural sim. - colon. - Tax", "Communication - PTA - Tax",
"Cultural sim. - language - ETS", "Cultural sim. - religion - ETS", "Cultural sim. - colon. - ETS", "Communication - PTA - ETS",
"Cultural sim. - language - FiT", "Cultural sim. - religion - FiT", "Cultural sim. - colon. - FiT", "Communication - PTA - FiT",
"Cultural sim. - language - RPS", "Cultural sim. - religion - RPS", "Cultural sim. - colon. - RPS", "Communication - PTA - RPS",
"Cultural sim. - language - All pricing", "Cultural sim. - religion - All pricing", "Cultural sim. - colon. - All pricing", "Communication - PTA - All pricing",
"Cultural sim. - language - All techno.", "Cultural sim. - religion - All techno.", "Cultural sim. - colon. - All techno.", "Communication - PTA - All techno.",
"Knowledge stock - local (imports)", "Technology stock - local (imports)",
"Knowledge stock x imports", "Technology stock x imports",
"Leakage - Tax", "Leakage - ETS", "Leakage - FiT", "Leakage - RPS", "Leakage - All pricing", "Leakage - All techno.",
"Free riding - Tax", "Free riding - ETS", "Free riding - FiT", "Free riding - RPS", "Free riding - All pricing", "Free riding - All techno.",
"$\\%$ elec. from fossil fuels$\ ^*$", "$\\%$ elec. ff. x CO2 intensity$\ ^*$",
"Import shares", "GDP per capita (PPP, 2017 constant USD)$\ ^*$", "Electoral democracy index$\ ^*$",
"CO2 intensity of GDP", "Share of world carbon-intensive exports"),
style = "aer",
font.size = "footnotesize",
summary.stat = c("n", "min", "median", "max", "sd"),
title = "Summary statistics",
notes.align = "l",
notes.append = FALSE,
notes = "\\parbox[t]{\\textwidth}{Variables marked with $\ ^*$ are scaled in the regressions so that a one-unit change represents a 10$\\%$ deviation from the mean. This aids with interpretation and follows Lovely and Popp (2011)}",
out = "/Users/gd/OneDrive - rff/Documents/Research/projects/climate_policy_adoption/cp_diffusion/manuscript/Tex/tables/sumstatR_v4.tex")
dataframes <- list(fit = "CPdiff_hz_fit_v4.csv", rps = "CPdiff_hz_rps_v4.csv", techno = "CPdiff_hz_techpol_v4.csv",
ets = "CPdiff_hz_ets_v4.csv", tax = "CPdiff_hz_tax_v4.csv", pricing = "CPdiff_hz_pricing_v4.csv")
weibull <- list()
exponential <- list()
cox <- list()
for (name in names(dataframes)) {
print(name)
df = read.csv(dataframes[[name]])
df$start = df$Duration - 1
df$stop = df$Duration
outcome <- names(select(df, "policy_"))
if (name %in% list("fit", "rps", "techno")) {
#WEIBULL
#Accessing with [[ or $ is similar. However, it differs for [ in that, indexing with [ will return us a data frame but the other two will reduce it into a vector.
surv_wei <- Surv(df$Duration, df[[outcome[1]]])
weibull[[name]] <- phreg(surv_wei ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
dist='weibull')
#The coefficient estimated by the survreg command are AFT coefficients - they need to be transformed into
#PH model coefficients. https://www.rdocumentation.org/packages/SurvRegCensCov/versions/1.4/topics/ConvertWeibull
#weibullph[[i]] <- ConvertWeibull(weibull[[i]], conf.level = 0.95)
#EXPONENTIAL
exponential[[name]] <- phreg(surv_wei ~ policy_share + policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
dist='weibull',
shape = 1)
#COX
surv_cox <- Surv(df$start, df$stop, df[[outcome[1]]])
cox[[name]] <- coxph(surv_cox ~ policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
ties = "breslow",
data = df,
cluster = Country)
}
else if (name %in% list("tax", "ets", "pricing")) {
#WEIBULL
#Accessing with [[ or $ is similar. However, it differs for [ in that, indexing with [ will return us a data frame but the other two will reduce it into a vector.
surv_wei <- Surv(df$Duration, df[[outcome[1]]])
weibull[[name]] <- phreg(surv_wei ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
dist='weibull')
#The coefficient estimated by the survreg command are AFT coefficients - they need to be transformed into
#PH model coefficients. https://www.rdocumentation.org/packages/SurvRegCensCov/versions/1.4/topics/ConvertWeibull
#weibullph[[i]] <- ConvertWeibull(weibull[[i]], conf.level = 0.95)
#EXPONENTIAL
exponential[[name]] <- phreg(surv_wei ~ policy_share + policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
dist='weibull',
shape = 1)
#COX
surv_cox <- Surv(df$start, df$stop, df[[outcome[1]]])
cox[[name]] <- coxph(surv_cox ~ policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
ties = "breslow",
data = df,
cluster = Country)
}
dd
}
for (name in names(dataframes)) {
print(name)
df = read.csv(dataframes[[name]])
df$start = df$Duration - 1
df$stop = df$Duration
outcome <- names(select(df, "policy_"))
if (name %in% list("fit", "rps", "techno")) {
#WEIBULL
#Accessing with [[ or $ is similar. However, it differs for [ in that, indexing with [ will return us a data frame but the other two will reduce it into a vector.
surv_wei <- Surv(df$Duration, df[[outcome[1]]])
weibull[[name]] <- phreg(surv_wei ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
dist='weibull')
#The coefficient estimated by the survreg command are AFT coefficients - they need to be transformed into
#PH model coefficients. https://www.rdocumentation.org/packages/SurvRegCensCov/versions/1.4/topics/ConvertWeibull
#weibullph[[i]] <- ConvertWeibull(weibull[[i]], conf.level = 0.95)
#EXPONENTIAL
exponential[[name]] <- phreg(surv_wei ~ policy_share + policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
dist='weibull',
shape = 1)
#COX
surv_cox <- Surv(df$start, df$stop, df[[outcome[1]]])
cox[[name]] <- coxph(surv_cox ~ policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
ties = "breslow",
data = df,
cluster = Country)
}
else if (name %in% list("tax", "ets", "pricing")) {
#WEIBULL
#Accessing with [[ or $ is similar. However, it differs for [ in that, indexing with [ will return us a data frame but the other two will reduce it into a vector.
surv_wei <- Surv(df$Duration, df[[outcome[1]]])
weibull[[name]] <- phreg(surv_wei ~  policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
dist='weibull')
#The coefficient estimated by the survreg command are AFT coefficients - they need to be transformed into
#PH model coefficients. https://www.rdocumentation.org/packages/SurvRegCensCov/versions/1.4/topics/ConvertWeibull
#weibullph[[i]] <- ConvertWeibull(weibull[[i]], conf.level = 0.95)
#EXPONENTIAL
exponential[[name]] <- phreg(surv_wei ~ policy_share + policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
data = df,
dist='weibull',
shape = 1)
#COX
surv_cox <- Surv(df$start, df$stop, df[[outcome[1]]])
cox[[name]] <- coxph(surv_cox ~ policy_leakage_index + policy_comcol + policy_comlang_off + policy_comrelig + policy_fta_hmr + policy_impexp + patents_ds_imp + patents_ds_imp_imp + ff_perc_tot_sc + gdp_pc_ppp_sc + v2x_polyarchy_sc,
ties = "breslow",
data = df,
cluster = Country)
}
#-------------SURVIVAL PLOTS----------------#
#https://www.datacamp.com/community/tutorials/survival-analysis-R
## Weibull plots
#  weiplot <- ggforest(cox[[i]], main = paste("Survival plot ", "test") )
#  ggsave(paste("wei_main_", name), weiplot, )
## Cox plot
#  coxplot <- ggforest(cox[[i]], data = df, main = paste("Forest plot ", "test") )
#  ggsave(paste("cox_main_", name), coxplot, path = "/Users/GD/Documents/Activities/Work/Research//Users/GD/Documents/Activities/Work/Research/Research_projects/2020/Climate_policy_diffusion/Manuscript/Tex_file/Figures/")
}
